<?php
//Работа с count. //count подсчитывает количество элементов массива.
//Дан массив $arr. Подсчитайте количество элементов этого массива.
$arr = [1, 2, 3, 'a', 'b', 'c', true, false, sqrt(244), 'true', 'false'];
echo "Количество элементов массива: " . count($arr);


//Дан массив $arr. С помощью функции count выведите последний элемент данного массива.
echo "<br/><br/>";
$arr = [1, 2, 3, 'a', 'b', 'c', true, false, sqrt(244), 'true', 'false'];
$last = count($arr) - 1;
echo "Последний элемент массива: " . $arr[$last];


//Работа с in_array. //in_array проверяет наличие заданного элемента в массиве
//Дан массив с числами. Проверьте, что в нем есть элемент со значением 3.
echo "<br/><br/>";
$arr = ['a', 'b', 'c', 1, 2, 3];

$result = in_array(3, $arr);
var_dump($result);

echo "<br/>";

echo "Для проверки: ";
$res = in_array('one', $arr);
var_dump($res);

//Работа с array_sum и array_product. //array_sum складывает, array_product умножает
//Дан массив [1, 2, 3, 4, 5]. Найдите сумму элементов данного массива.
echo "<br/><br/>";
$arr = [1, 2, 3, 4, 5];
echo "Сумма элементов массива [1, 2, 3, 4, 5]: " . array_sum($arr);


//Дан массив [1, 2, 3, 4, 5]. Найдите произведение (умножение) элементов данного массива.
echo "<br/><br/>";
$arr = [1, 2, 3, 4, 5];
echo "Произведение элементов массива [1, 2, 3, 4, 5]: " . array_product($arr);

//Дан массив $arr. С помощью функций array_sum и count найдите среднее арифметическое элементов (сумма элементов делить на их количество) данного массива.
echo "<br/><br/>";
$arr = [1, 2, 3, 4, 5];
$res = array_sum($arr) / count($arr);
echo "Среднее арифметическое элементов массива [1, 2, 3, 4, 5]: " . $res;


//Работа с range. //range создает массив с диапазоном элементов
//Создайте массив, заполненный числами от 1 до 100.
echo "<br/><br/>";
$arr = range(1, 100);
print_r($arr);


//Создайте массив, заполненный буквами от 'a' до 'z'.
echo "<br/><br/>";
$arr = range('a', 'z');
print_r($arr);


//Создайте строку '1-2-3-4-5-6-7-8-9' не используя цикл.
echo "<br/><br/>";
$arr = range(1, 9);
echo implode('-', $arr);


//Найдите сумму чисел от 1 до 100 не используя цикл.
echo "<br/><br/>";
$arr = range(1, 100);
echo array_sum($arr);


//Найдите произведение чисел от 1 до 10 не используя цикл.
echo "<br/><br/>";
$arr = range(1, 10);
echo array_product($arr);


//Работа с array_merge. //array_merge сливает два и более массивов вместе
//Даны два массива: первый с элементами 1, 2, 3, второй с элементами 'a', 'b', 'c'. Сделайте из них массив с элементами 1, 2, 3, 'a', 'b', 'c'.
echo "<br/><br/>";
$arr = range(1, 3);
$array = range('a', 'c');
print_r(array_merge($arr, $array));

//Работа с array_slice. //array_slice отрезает и возвращает часть массива
//Дан массив с элементами 1, 2, 3, 4, 5. С помощью функции array_slice создайте из него массив $result с элементами 2, 3, 4.
echo "<br/><br/>";
$arr = [1, 2, 3, 4, 5];
                                                //true - сохраняет ключи массива при обрезке
$result = array_slice($arr, 1, 3, true);
var_dump($result);

//Работа с array_splice. //array_splice отрезает и возвращает часть массива
//Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice преобразуйте массив в [1, 4, 5].
echo "<br/><br/>";
$arr = [1, 2, 3, 4, 5];
array_splice($arr, 1, 2);
print_r($arr);


//Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice запишите в новый массив элементы [2, 3, 4].
echo "<br/><br/>";
$arr = [1, 2, 3, 4, 5];
array_splice($arr, 0, 1);
array_splice($arr, -1, 1);
print_r($arr);


//Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice сделайте из него массив [1, 2, 3, 'a', 'b', 'c', 4, 5].
echo "<br/><br/>";
$arr = [1, 2, 3, 4, 5];
array_splice($arr, 3, 0, ['a', 'b', 'c']);
print_r($arr);


//Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].
echo "<br/><br/>";
$arr = [1, 2, 3, 4, 5];
array_splice($arr, 1, 0, ['a', 'b']);
array_splice($arr, 6, 0, ['c']);
array_splice($arr, -1, 0, ['e']);
print_r($arr);


//Работа с array_keys - получает ключи массива и записывает их в новый массив
         //array_values - выбирает все значения из массива
         //array_combine - осуществляет слияние двух массивов в один ассоциативный
//Дан массив 'a'=>1, 'b'=>2, 'c'=>3'. Запишите в массив $keys ключи из этого массива, а в $values – значения.
echo "<br/><br/>";
$arr = [
    'a' => 1,
    'b' => 2,
    'c' => 3
];
$keys = array_keys($arr);
$values = array_values($arr);
print_r($keys);
echo "<br/>";
print_r($values);


//Даны два массива: ['a', 'b', 'c'] и [1, 2, 3]. Создайте с их помощью массив 'a'=>1, 'b'=>2, 'c'=>3'.
echo "<br/><br/>";
$arr = ['a', 'b', 'c'];
$array = [1, 2, 3];
print_r(array_combine($arr, $array));

//Работа с array_flip - array_flip производит обмен местами ключей и значений массива
           //array_reverse - array_reverse переворачивает массив в обратном порядке
//Дан массив 'a'=>1, 'b'=>2, 'c'=>3. Поменяйте в нем местами ключи и значения.
echo "<br/><br/>";
$arr = ['a' => 1, 'b' => 2, 'c' => 3];
print_r(array_flip($arr));

//Дан массив с элементами 1, 2, 3, 4, 5. Сделайте из него массив с элементами 5, 4, 3, 2, 1.
echo "<br/><br/>";
$arr = [1, 2, 3, 4, 5];
print_r(array_reverse($arr));


//Работа с array_search. //array_search осуществляет поиск значения в массиве и возвращает ключ первого найденного элемента
//Дан массив ['a', '-', 'b', '-', 'c', '-', 'd']. Найдите позицию первого элемента '-'.
echo "<br/><br/>";
$arr = ['a', '-', 'b', '-', 'c', '-', 'd'];
echo "Позиция первого элемента '-' в массиве ['a', '-', 'b', '-', 'c', '-', 'd']: " . array_search('-', $arr);


//Дан массив ['a', '-', 'b', '-', 'c', '-', 'd']. Найдите позицию первого элемента '-' и удалите его с помощью функции array_splice.
echo "<br/><br/>";
$arr = ['a', '-', 'b', '-', 'c', '-', 'd'];
$array = array_splice($arr, array_search('-', $arr), 1);
print_r($arr);


//Работа с array_replace. //array_replace заменяет значения первого массива значениями с такими же ключами из других переданных массивов
//Дан массив ['a', 'b', 'c', 'd', 'e']. Поменяйте элемент с ключом 0 на '!', а элемент с ключом 3 - на '!!'.
echo "<br/><br/>";
$arr = ['a', 'b', 'c', 'd', 'e'];
$arr = array_replace($arr, [0 =>'!', 3 => '!!!']);
print_r($arr);

//Работа с сортировку
//Дан массив '3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'. Попробуйте на нем различные типы сортировок.
echo "<br/><br/>";
$arr = [
    '3' => 'a',
    '1' => 'c',
    '2' => 'e',
    '4' => 'b'
];

echo "sort - по возрастанию элементов: "; sort($arr); print_r($arr); echo "<br/>";
echo "rsort - по убыванию элементов: "; rsort($arr); print_r($arr); echo "<br/>";
echo "asort - по возрастанию элементов с сохранением ключей: "; asort($arr); print_r($arr); echo "<br/>";
echo "arsort - по убыванию элементов с сохранением ключей: "; arsort($arr); print_r($arr); echo "<br/>";
echo "ksort - по возрастанию ключей: "; ksort($arr); print_r($arr); echo "<br/>";
echo "krsort - по убыванию ключей: "; krsort($arr); print_r($arr); echo "<br/>";
echo "usort - по функции по элементам: "; usort($arr); print_r($arr); echo "<br/>";
echo "uasort - по функции по элементам с сохранением ключей: "; uasort($arr); print_r($arr); echo "<br/>";
echo "uksort - по функции по ключам: "; uksort($arr); print_r($arr); echo "<br/>";
echo "natsort - натуральная сортировка: "; natsort($arr); print_r($arr);

//Работа с array_rand. //array_rand возвращает случайный ключ из массива
//Дан массив с элементами 'a'=>1, 'b'=>2, 'c'=>3. Выведите на экран случайный ключ из данного массива.
echo "<br/><br/>";
$arr = ['a' => 1, 'b' => 2, 'c' => 3];
echo "Случайный ключ из массива ['a' => 1, 'b' => 2, 'c' => 3]: " . array_rand($arr);


//Дан массив с элементами 'a'=>1, 'b'=>2, 'c'=>3. Выведите на экран случайный элемент данного массива.
echo "<br/><br/>";
$arr = ['a' => 1, 'b' => 2, 'c' => 3];
$key = array_rand($arr);
echo "Элемент случайного ключа массива ['a' => 1, 'b' => 2, 'c' => 3]: " . $arr[$key];


//Работа с shuffle. //shuffle осуществляет перемешивание массива так, чтобы его элементы шли в случайном порядке
//Дан массив $arr. Перемешайте его элементы в случайном порядке.
echo "<br/><br/>";
$arr = [1, 2, 3, 'a', 'b', 'c', true, false, sqrt(244), 'true', 'false'];
shuffle($arr);
print_r($arr);


//Заполните массив числами от 1 до 25 с помощью range, а затем перемешайте его элементы в случайном порядке.
echo "<br/><br/>";
$arr = range(1, 25);
shuffle($arr);
print_r($arr);


//Создайте массив, заполненный буквами от 'a' до 'z' так, чтобы буквы шли в случайном порядке и не повторялись.
echo "<br/><br/>";
$arr = range('a', 'z');
shuffle($arr);
print_r($arr);


//Сделайте строку длиной 6 символов, состоящую из маленьких английских букв, расположенных в случайном порядке. Буквы не должны повторяться.
echo "<br/><br/>";
$arr = range('a', 'z');
shuffle($arr);
foreach ($arr as $key => $value) {
    if ($key == 6) break;
    $array[] = $value;
}
echo trim(implode('', $array), '-');;


//Работа с array_unique. //array_unique осуществляет удаление повторяющихся элементов (дублей) из массива
//Дан массив с элементами 'a', 'b', 'c', 'b', 'a'. Удалите из него повторяющиеся элементы.
echo "<br/><br/>";
$arr = ['a', 'b', 'c', 'b', 'a'];
$array = array_unique($arr);
print_r($array);

//Работа с array_shift - вырезает и возвращает первый элемент массива
            //array_pop - вырезает и возвращает последний элемент массива
            //array_unshift - добавляет элементы в начало массива
            //array_push - добавляет элементы в конец массива
//Дан массив с элементами 1, 2, 3, 4, 5. Выведите на экран его первый и последний элемент, причем так, чтобы в исходном массиве они исчезли.
echo "<br/><br/>";
$arr = [1, 2, 3, 4, 5];
echo "Первый элемент массива [1, 2, 3, 4, 5]: " . array_shift($arr) . "<br/>";
echo "Последний элемент массива [1, 2, 3, 4, 5]: " . array_pop($arr) . "<br/>";
echo "Исходный массив без этих элементов: "; print_r($arr);


//Дан массив с элементами 1, 2, 3, 4, 5. Добавьте ему в начало элемент 0, а в конец - элемент 6.
echo "<br/><br/>";
$arr = [1, 2, 3, 4, 5];
echo "Добавить в начало массива [1, 2, 3, 4, 5] элемент 0: ";
array_unshift($arr, 0);
print_r($arr);
echo "<br/>";

echo "Добавить в конец массива [1, 2, 3, 4, 5] элемент 6: ";
array_push($arr, 6);
print_r($arr);


//Дан массив с элементами 1, 2, 3, 4, 5, 6, 7, 8. С помощью цикла и функций array_shift и array_pop выведите на экран его элементы в следующем
//порядке: 18273645.
echo "<br/><br/>";
$arr = [1, 2, 3, 4, 5, 6, 7, 8];
$array = '';
while (count($arr) > 0) {
    $array .= array_shift($arr);
    $array .= array_pop($arr);
}
print_r($array);


//Работа с array_pad - дополняет массив определенным значением до заданного размера,
        // array_fill - создает массив, заполненный элементами с определенным значением,
        // array_fill_keys - создает массив и заполняет массив элементами с определенным значением так, чтобы весь массив был с одинаковыми элементами, но разными ключами,
        // array_chunk - разбивает одномерный массив в двухмерный
//Дан массив с элементами 'a', 'b', 'c'. Сделайте из него массив с элементами 'a', 'b', 'c', '-', '-', '-'.
echo "<br/><br/>";
$arr = ['a', 'b', 'c'];
print_r(array_pad($arr, 6, '-'));


//Заполните массив 10-ю буквами 'x'.
echo "<br/><br/>";
$arr = array_fill(0, 10, 'x');
print_r($arr);


//Создайте массив, заполненный целыми числами от 1 до 20. С помощью функции array_chunk разбейте этот
// массив на 5 подмассивов ([1, 2, 3, 4]; [5, 6, 7, 8] и т.д.).
echo "<br/><br/>";
$arr = range(1, 20);
print_r(array_chunk($arr, 4));


//Работа с array_count_values - производит подсчет количества всех значений массива
//Дан массив с элементами 'a', 'b', 'c', 'b', 'a'. Подсчитайте сколько раз встречается каждая из букв.
echo "<br/><br/>";
$arr = ['a', 'b', 'c', 'b', 'a'];
print_r(array_count_values($arr));


//Работа с array_map - применяет заданную функцию ко всем элементам массива и возвращает измененный массив
//Дан массив с элементами 1, 2, 3, 4, 5. Создайте новый массив, в котором будут лежать
// квадратные корни данных элементов.
echo "<br/><br/>";
$arr = [1, 2, 3, 4, 5];
print_r(array_map('sqrt', $arr));


//Дан массив с элементами '<b>php</b>', '<i>html</i>'. Создайте новый массив, в котором из элементов
// будут удалены теги.
echo "<br/><br/>";
$arr = ['<b>php</b>', '<i>html</i>'];
print_r(array_map('strip_tags', $arr));


//Дан массив с элементами ' a ', ' b ', ' с '. Создайте новый массив, в котором будут данные элементы
// без концевых пробелов.
echo "<br/><br/>";
$arr = [' a ', ' b ', ' c '];
print_r(array_map('trim', $arr));


// Работа с array_intersect - вычисляет пересечение массивов - возвращает массив из элементов, которые есть во всех массивах, переданных в функцию,
// array_diff - Вычислить расхождение в массивах
//Дан массив с элементами 1, 2, 3, 4, 5 и массив с элементами 3, 4, 5, 6, 7. Запишите в новый массив элементы,
// которые есть и в том, и в другом массиве.
echo "<br/><br/>";
$arr1 = [1, 2, 3, 4, 5];
$arr2 = [3, 4, 5, 6, 7];
print_r(array_intersect($arr1, $arr2));


//Дан массив с элементами 1, 2, 3, 4, 5 и массив с элементами 3, 4, 5, 6, 7. Запишите в новый массив элементы,
// которые не присутствуют в обоих массивах одновременно.
echo "<br/><br/>";
$arr1 = [1, 2, 3, 4, 5];
$arr2 = [3, 4, 5, 6, 7];
print_r(array_diff($arr1, $arr2));


//Задачи
//Дана строка '1234567890'. Найдите сумму цифр из этой строки не используя цикл.
echo "<br/><br/>";
$str = '1234567890';
$arr = str_split($str);
echo array_sum($arr);


//Создайте массив ['a'=>1, 'b'=2... 'z'=>26] не используя цикл.
echo "<br/><br/>";
$arr1 = range('a', 'z');
$arr2 = range(1, 26);
print_r(array_combine($arr1, $arr2));


//Создайте массив вида [[1, 2, 3], [4, 5, 6], [7, 8, 9]] не используя цикл.
echo "<br/><br/>";
$arr = range(1, 9);
print_r(array_chunk($arr, 3));


//Дан массив с элементами 1, 2, 4, 5, 5. Найдите второй по величине элемент. В нашем случае это будет 4.
echo "<br/><br/>";
$arr = [1, 2, 4, 5, 5];
$arr = array_unique($arr);
rsort($arr);
echo $arr[1];

